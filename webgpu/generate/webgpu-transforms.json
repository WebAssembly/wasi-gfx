[
    {
        "reason": "Remove navigators",
        "operations": [
            {
                "operation": {
                    "remove-type": "navigator"
                }
            },
            {
                "operation": {
                    "remove-type": "worker-navigator"
                }
            }
        ]
    },
    {
        "reason": "Have a single color type",
        "operations": [
            {
                "operation": {
                    "remove-type": "gpu-color-dict-or-list-f64"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-color"
                }
            },
            {
                "operation": {
                    "rename-type": {
                        "from": "gpu-color-dict",
                        "to": "gpu-color"
                    }
                }
            }
        ]
    },
    {
        "reason": "Have a single origin 3D type",
        "operations": [
            {
                "operation": {
                    "remove-type": "gpu-origin3-d-dict-or-list-gpu-integer-coordinate"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-origin3-d"
                }
            },
            {
                "operation": {
                    "rename-type": {
                        "from": "gpu-origin3-d-dict",
                        "to": "gpu-origin3-d"
                    }
                }
            }
        ]
    },
    {
        "reason": "Have a single extent 3D type",
        "operations": [
            {
                "operation": {
                    "remove-type": "gpu-extent3-d-dict-or-list-gpu-integer-coordinate"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-extent3-d"
                }
            },
            {
                "operation": {
                    "rename-type": {
                        "from": "gpu-extent3-d-dict",
                        "to": "gpu-extent3-d"
                    }
                }
            }
        ]
    },
    {
        "reason": "Remove gpu-supported-limits.copy-external-image-to-texture as it's web related",
        "operations": [
            {
                "operation": {
                    "remove-func": {
                        "resource": "gpu-queue",
                        "func": "copy-external-image-to-texture"
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-copy-external-image-source"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-copy-external-image-source-info"
                }
            },
            {
                "operation": {
                    "remove-type": "html-canvas-element-or-html-image-element-or-html-video-element-or-image-bitmap-or-image-data-or-offscreen-canvas-or-video-frame"
                }
            },
            {
                "operation": {
                    "remove-type": "html-canvas-element"
                }
            },
            {
                "operation": {
                    "remove-type": "html-image-element"
                }
            },
            {
                "operation": {
                    "remove-type": "image-bitmap"
                }
            },
            {
                "operation": {
                    "remove-type": "image-data"
                }
            },
            {
                "operation": {
                    "remove-type": "offscreen-canvas"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-origin2-d-dict"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-origin2-d-dict-or-list-gpu-integer-coordinate"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-origin2-d"
                }
            },
            {
                "operation": {
                    "remove-func": {
                        "resource": "gpu-canvas-context",
                        "func": "canvas"
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "html-canvas-element-or-offscreen-canvas"
                }
            }
        ]
    },
    {
        "reason": "Remove gpu-device.import-external-texture as it's web related",
        "operations": [
            {
                "operation": {
                    "remove-func": {
                        "resource": "gpu-device",
                        "func": "import-external-texture"
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-external-texture-descriptor"
                }
            },
            {
                "operation": {
                    "remove-type": "html-video-element-or-video-frame"
                }
            },
            {
                "operation": {
                    "remove-type": "html-video-element"
                }
            },
            {
                "operation": {
                    "remove-type": "video-frame"
                }
            },
            {
                "operation": {
                    "remove-record-field": {
                        "record": "gpu-bind-group-layout-entry",
                        "field": "external-texture"
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-external-texture-binding-layout"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-external-texture"
                }
            },
            {
                "operation": {
                    "remove-variant-case": {
                        "variant": "gpu-buffer-binding-or-gpu-external-texture-or-gpu-sampler-or-gpu-texture-view",
                        "case": "gpu-external-texture"
                    }
                }
            },
            {
                "operation": {
                    "rename-type": {
                        "from": "gpu-buffer-binding-or-gpu-external-texture-or-gpu-sampler-or-gpu-texture-view",
                        "to": "gpu-buffer-binding-or-gpu-sampler-or-gpu-texture-view"
                    }
                }
            },
            {
                "operation": {
                    "replace-refs": {
                        "old": "gpu-buffer-binding-or-gpu-external-texture-or-gpu-sampler-or-gpu-texture-view",
                        "new": "gpu-buffer-binding-or-gpu-sampler-or-gpu-texture-view"
                    }
                }
            }
        ]
    },
    {
        "reason": "Remove bases that are never used",
        "operations": [
            {
                "operation": {
                    "remove-type": "dom-exception"
                }
            },
            {
                "operation": {
                    "remove-type": "event-init"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-object-descriptor-base"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-pipeline-descriptor-base"
                }
            },
            {
                "operation": {
                    "remove-type": "event-target"
                }
            },
            {
                "operation": {
                    "remove-type": "event"
                }
            }
        ]
    },
    {
        "reason": "Beautify gpu-*-binding.set-bind-group, no tuple params. Note: offset & length are not optional in JS, but seems to be JS specific reason for this https://github.com/gpuweb/gpuweb/pull/440#discussion_r342299860",
        "operations": [
            {
                "vars": {
                    "$_INDEX": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-bundle-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 0 }
                            ]
                        }
                    },
                    "$_BIND_GROUP": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-bundle-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 1 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-bundle-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 2 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA_START": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-bundle-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets-data-dynamic-offsets-data-start-dynamic-offsets-data-length"
                            },
                            "unwrap-t": [
                                { "tuple": 3 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA_LENGTH": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-bundle-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets-data-dynamic-offsets-data-start-dynamic-offsets-data-length"
                            },
                            "unwrap-t": [
                                { "tuple": 4 }
                            ]
                        }
                    }
                },
                "operation": {
                    "retype-func-params": {
                        "resource": "gpu-render-bundle-encoder",
                        "func": "set-bind-group",
                        "new-params": {
                            "items": [
                                ["index", "$_INDEX"],
                                ["bind-group", "$_BIND_GROUP"],
                                ["dynamic-offsets-data", "$_DYNAMIC_OFFSETS_DATA"],
                                ["dynamic-offsets-data-start", { "option": "$_DYNAMIC_OFFSETS_DATA_START" }],
                                ["dynamic-offsets-data-length", { "option": "$_DYNAMIC_OFFSETS_DATA_LENGTH" }]
                            ]
                        }
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-render-bundle-encoder-set-bind-group-params"
                }
            },
            {
                "vars": {
                    "$_INDEX": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 0 }
                            ]
                        }
                    },
                    "$_BIND_GROUP": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 1 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 2 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA_START": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets-data-dynamic-offsets-data-start-dynamic-offsets-data-length"
                            },
                            "unwrap-t": [
                                { "tuple": 3 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA_LENGTH": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-render-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets-data-dynamic-offsets-data-start-dynamic-offsets-data-length"
                            },
                            "unwrap-t": [
                                { "tuple": 4 }
                            ]
                        }
                    }
                },
                "operation": {
                    "retype-func-params": {
                        "resource": "gpu-render-pass-encoder",
                        "func": "set-bind-group",
                        "new-params": {
                            "items": [
                                ["index", "$_INDEX"],
                                ["bind-group", "$_BIND_GROUP"],
                                ["dynamic-offsets-data", "$_DYNAMIC_OFFSETS_DATA"],
                                ["dynamic-offsets-data-start", { "option": "$_DYNAMIC_OFFSETS_DATA_START" }],
                                ["dynamic-offsets-data-length", { "option": "$_DYNAMIC_OFFSETS_DATA_LENGTH" }]
                            ]
                        }
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-render-pass-encoder-set-bind-group-params"
                }
            },
            {
                "vars": {
                    "$_INDEX": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-compute-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 0 }
                            ]
                        }
                    },
                    "$_BIND_GROUP": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-compute-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 1 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-compute-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets"
                            },
                            "unwrap-t": [
                                { "tuple": 2 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA_START": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-compute-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets-data-dynamic-offsets-data-start-dynamic-offsets-data-length"
                            },
                            "unwrap-t": [
                                { "tuple": 3 }
                            ]
                        }
                    },
                    "$_DYNAMIC_OFFSETS_DATA_LENGTH": {
                        "find-type": {
                            "variant-case": {
                                "variant": "gpu-compute-pass-encoder-set-bind-group-params",
                                "case": "index-bind-group-dynamic-offsets-data-dynamic-offsets-data-start-dynamic-offsets-data-length"
                            },
                            "unwrap-t": [
                                { "tuple": 4 }
                            ]
                        }
                    }
                },
                "operation": {
                    "retype-func-params": {
                        "resource": "gpu-compute-pass-encoder",
                        "func": "set-bind-group",
                        "new-params": {
                            "items": [
                                ["index", "$_INDEX"],
                                ["bind-group", "$_BIND_GROUP"],
                                ["dynamic-offsets-data", "$_DYNAMIC_OFFSETS_DATA"],
                                ["dynamic-offsets-data-start", { "option": "$_DYNAMIC_OFFSETS_DATA_START" }],
                                ["dynamic-offsets-data-length", { "option": "$_DYNAMIC_OFFSETS_DATA_LENGTH" }]
                            ]
                        }
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-compute-pass-encoder-set-bind-group-params"
                }
            }
        ]
    },
    {
        "reason": "Remove allow-shared-buffer-source as it's web related and temporarily replace it with list<u8>",
        "operations": [
            {
                "operation": {
                    "retype-func-param-type": {
                        "resource": "gpu-queue",
                        "func": "write-buffer",
                        "param": "data",
                        "new-type": {
                            "list": "u8"
                        }
                    }
                }
            },
            {
                "operation": {
                    "rename-func": {
                        "resource": "gpu-queue",
                        "old-func-name": "write-buffer",
                        "new-func-name": "write-buffer-with-copy"
                    }
                }
            },
            {
                "operation": {
                    "retype-func-param-type": {
                        "resource": "gpu-queue",
                        "func": "write-texture",
                        "param": "data",
                        "new-type": {
                            "list": "u8"
                        }
                    }
                }
            },
            {
                "operation": {
                    "rename-func": {
                        "resource": "gpu-queue",
                        "old-func-name": "write-texture",
                        "new-func-name": "write-texture-with-copy"
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "array-buffer-view"
                }
            },
            {
                "operation": {
                    "remove-type": "allow-shared-buffer-source"
                }
            },
            {
                "operation": {
                    "remove-type": "data-view"
                }
            },
            {
                "operation": {
                    "remove-type": "uint8-array"
                }
            },
            {
                "operation": {
                    "remove-type": "uint8-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "uint8-array-set-src"
                }
            },
            {
                "operation": {
                    "remove-type": "uint8-clamped-array"
                }
            },
            {
                "operation": {
                    "remove-type": "uint8-clamped-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "uint8-clamped-array-set-src"
                }
            },
            {
                "operation": {
                    "remove-type": "uint16-array"
                }
            },
            {
                "operation": {
                    "remove-type": "uint16-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "uint16-array-set-src"
                }
            },
            {
                "operation": {
                    "remove-type": "uint32-array"
                }
            },
            {
                "operation": {
                    "remove-type": "uint32-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "uint32-array-set-src"
                }
            },
            {
                "operation": {
                    "remove-type": "int8-array"
                }
            },
            {
                "operation": {
                    "remove-type": "int8-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "int8-array-set-src"
                }
            },
            {
                "operation": {
                    "remove-type": "int16-array"
                }
            },
            {
                "operation": {
                    "remove-type": "int16-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "int16-array-set-src"
                }
            },
            {
                "operation": {
                    "remove-type": "int32-array"
                }
            },
            {
                "operation": {
                    "remove-type": "int32-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "int32-array-set-src"
                }
            },
            {
                "operation": {
                    "remove-type": "float32-array"
                }
            },
            {
                "operation": {
                    "remove-type": "float32-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "float32-array-set-src"
                }
            },
            {
                "operation": {
                    "remove-type": "float64-array"
                }
            },
            {
                "operation": {
                    "remove-type": "float64-array-constructor-options"
                }
            },
            {
                "operation": {
                    "remove-type": "float64-array-set-src"
                }
            }
        ]
    },
    {
        "reason": "Change predefined-color-space to enum",
        "operations": [
            {
                "operation": {
                    "remove-type": "predefined-color-space"
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "predefined-color-space",
                        "kind": {
                            "enum": {
                                "cases": [
                                    {
                                        "name": "srgb"
                                    },
                                    {
                                        "name": "display-p3"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "Remove prefixes of identifiers with leading digits",
        "operations": [
            {
                "operation": {
                    "rename-enum-case": {
                        "enum": "gpu-texture-dimension",
                        "old-case-name" : "x1d",
                        "new-case-name" : "d1"
                    }
                }
            },
            {
                "operation": {
                    "rename-enum-case": {
                        "enum": "gpu-texture-dimension",
                        "old-case-name" : "x2d",
                        "new-case-name" : "d2"
                    }
                }
            },
            {
                "operation": {
                    "rename-enum-case": {
                        "enum": "gpu-texture-dimension",
                        "old-case-name" : "x3d",
                        "new-case-name" : "d3"
                    }
                }
            },
            {
                "operation": {
                    "rename-enum-case": {
                        "enum": "gpu-texture-view-dimension",
                        "old-case-name" : "x1d",
                        "new-case-name" : "d1"
                    }
                }
            },
            {
                "operation": {
                    "rename-enum-case": {
                        "enum": "gpu-texture-view-dimension",
                        "old-case-name" : "x2d",
                        "new-case-name" : "d2"
                    }
                }
            },
            {
                "operation": {
                    "rename-enum-case": {
                        "enum": "gpu-texture-view-dimension",
                        "old-case-name" : "x2d-array",
                        "new-case-name" : "d2-array"
                    }
                }
            },
            {
                "operation": {
                    "rename-enum-case": {
                        "enum": "gpu-texture-view-dimension",
                        "old-case-name" : "x3d",
                        "new-case-name" : "d3"
                    }
                }
            }
        ]
    },
    {
        "reason": "Simplify naming of gpu-binding-resource",
        "operations": [
            {
                "operation": {
                    "remove-type": "gpu-binding-resource"
                }
            },
            {
                "operation": {
                    "rename-type": {
                        "from" : "gpu-buffer-binding-or-gpu-sampler-or-gpu-texture-view",
                        "to" : "gpu-binding-resource"
                    }
                }
            }
        ]
    },
    {
        "reason": "Simplify naming of gpu-layout-mode, and merge gpu-auto-layout-mode cases into gpu-layout-mode",
        "operations": [
            {
                "operation": {
                    "rename-type": {
                        "from" : "gpu-auto-layout-mode-or-gpu-pipeline-layout",
                        "to" : "gpu-layout-mode"
                    }
                }
            },
            {
                "operation": {
                    "replace-refs": {
                        "old": "gpu-auto-layout-mode-or-gpu-pipeline-layout",
                        "new": "gpu-layout-mode"
                    }
                }
            },
            {
                "operation": {
                    "rename-variant-case": {
                        "variant": "gpu-layout-mode",
                        "old-case-name": "gpu-pipeline-layout",
                        "new-case-name": "specific"
                    }
                }
            },
            {
                "vars": {
                    "$_CASES": {
                        "find-string-list": {
                            "enum-cases": {
                                "enum": "gpu-auto-layout-mode"
                            },
                            "convert-to": "variant-cases"
                        }
                    }
                },
                "operation": {
                    "add-variant-cases": {
                        "variant": "gpu-layout-mode",
                        "cases": "$_CASES"
                    }
                }
            },
            {
                "operation": {
                    "remove-variant-case": {
                        "variant": "gpu-layout-mode",
                        "case": "gpu-auto-layout-mode"
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-auto-layout-mode"
                }
            }
        ]
    },
    {
        "reason": "Add get root function",
        "operations": [
            {
                "operation": {
                    "add-standalone-func": {
                        "func": {
                            "name": "get-gpu",
                            "params": {
                                "items": []
                            },
                            "results": { "anon": { "named": "gpu" } }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "Remove array-buffer and replace it temporarily with list<u8>",
        "operations": [
            {
                "operation": {
                    "remove-type": "array-buffer"
                }
            },
            {
                "operation": {
                    "remove-type": "array-buffer-constructor-options"
                }
            },
            {
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-buffer",
                        "func": "get-mapped-range",
                        "new-results": {
                            "anon": {
                                "list": "u8"
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "rename-func": {
                        "resource": "gpu-buffer",
                        "old-func-name": "get-mapped-range",
                        "new-func-name": "get-mapped-range-get-with-copy"
                    }
                }
            },
            {
                "operation": {
                    "add-resource-func": {
                        "resource": "gpu-buffer",
                        "func": {
                            "kind": {
                                "method": ["get-mapped-range-set-with-copy", { "named": { "items": [] } }]
                            },
                            "params": {
                                "items": [
                                    ["data", { "list": "u8" }],
                                    ["offset", { "option": { "named": "gpu-size64" } }],
                                    ["size", { "option": { "named": "gpu-size64" } }]
                                ]
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "Add graphics-context connections",
        "operations": [
            {
                "operation": {
                    "add-use": {
                        "use": {
                            "target": "wasi:graphics-context/graphics-context",
                            "use-names-list": [
                                [ "context", null ],
                                [ "abstract-buffer", null ]
                            ]
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-resource-func": {
                        "resource": "gpu-device",
                        "func": {
                            "kind": {
                                "method": ["connect-graphics-context", { "named": { "items": [] } }]
                            },
                            "params": {
                                "items": [
                                    ["context", { "borrow": "context" }]
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-resource-func": {
                        "resource": "gpu-texture",
                        "func": {
                            "kind": {
                                "static": ["from-graphics-buffer", { "anon": { "named": "gpu-texture" } }]
                            },
                            "params": {
                                "items": [
                                    ["buffer", { "named": "abstract-buffer" }]
                                ]
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "GPURenderPassLayout is only used as the base of GPURenderBundleEncoderDescriptor. Since wit doesn't have inheritance the fields are duplicated in the child so no need for the parent.",
        "operations": [
            {
                "operation": {
                    "remove-type": "gpu-render-pass-layout"
                }
            }
        ]
    },
    {
        "reason": "Errors have the message field raised to the top level type so that they don't have to be taken out of the inner error. Important if we allow new error types in the future that the developer has not yet handled. They also get a `kind` to enable detecting the error type. `kind` is a variant and not an enum so that they can have fields inside like `pipeline-error.reason`. Note: not changing gpu-error to a record even though errors added by us are records, because GPUError is an interface in the spec, and might one day gain interface like properties",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "gpu-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    { "name": "validation-error" },
                                    { "name": "out-of-memory-error" },
                                    { "name": "internal-error" }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-resource-func": {
                        "resource": "gpu-error",
                        "func": {
                            "kind": {
                                "method": [
                                    "kind",
                                    {
                                        "anon": {
                                            "named": "gpu-error-kind"
                                        }
                                    }
                                ]
                            },
                            "params": {
                                "items": []
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-validation-error"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-out-of-memory-error"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-internal-error"
                }
            }
        ]
    },
    {
        "reason": "Remove gpu-uncaptured-error-event constructor as it's not useful, it's only here because of web specific rules. https://github.com/gpuweb/gpuweb/pull/255#issuecomment-477308123 and https://w3ctag.github.io/design-principles/#constructors",
        "operations": [
            {
                "operation": {
                    "remove-func": {
                        "resource": "gpu-uncaptured-error-event",
                        "func": "constructor"
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-uncaptured-error-event-init"
                }
            }
        ]
    },
    {
        "reason": "request-device can throw for various reasons. https://www.w3.org/TR/webgpu/#dom-gpuadapter-requestdevice",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "request-device-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "type-error"
                                    },
                                    {
                                        "name": "operation-error"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "request-device-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "request-device-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "vars": {
                    "$_SUCCESS": {
                        "find-type": {
                            "func-results-anon": {
                                "resource": "gpu-adapter",
                                "func": "request-device"
                            }
                        }
                    }
                },
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-adapter",
                        "func": "request-device",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "ok": "$_SUCCESS",
                                    "err": {
                                        "named": "request-device-error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "create-*-pipeline-async throws if pipeline creation fails. https://www.w3.org/TR/webgpu/#async-pipeline-creation",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "create-pipeline-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "gpu-pipeline-error",
                                        "type": {
                                            "named": "gpu-pipeline-error-reason"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "create-pipeline-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "create-pipeline-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "vars": {
                    "$_SUCCESS": {
                        "find-type": {
                            "func-results-anon": {
                                "resource": "gpu-device",
                                "func": "create-compute-pipeline-async"
                            }
                        }
                    }
                },
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-device",
                        "func": "create-compute-pipeline-async",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "ok": "$_SUCCESS",
                                    "err": {
                                        "named": "create-pipeline-error"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "vars": {
                    "$_SUCCESS": {
                        "find-type": {
                            "func-results-anon": {
                                "resource": "gpu-device",
                                "func": "create-render-pipeline-async"
                            }
                        }
                    }
                },
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-device",
                        "func": "create-render-pipeline-async",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "ok": "$_SUCCESS",
                                    "err": {
                                        "named": "create-pipeline-error"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-pipeline-error"
                }
            },
            {
                "operation": {
                    "remove-type": "gpu-pipeline-error-init"
                }
            }
        ]
    },
    {
        "reason": "create-query-set throws if descriptor.type is 'timestamp', but 'timestamp-query' is not enabled for this device. https://www.w3.org/TR/webgpu/#dom-gpudevice-createqueryset",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "create-query-set-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "type-error"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "create-query-set-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "create-query-set-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "vars": {
                    "$_SUCCESS": {
                        "find-type": {
                            "func-results-anon": {
                                "resource": "gpu-device",
                                "func": "create-query-set"
                            }
                        }
                    }
                },
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-device",
                        "func": "create-query-set",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "ok": "$_SUCCESS",
                                    "err": {
                                        "named": "create-query-set-error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "pop-error-scope throws if the error-scope stack is empty. https://www.w3.org/TR/webgpu/#dom-gpudevice-poperrorscope",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "pop-error-scope-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "operation-error"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "pop-error-scope-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "pop-error-scope-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "vars": {
                    "$_SUCCESS": {
                        "find-type": {
                            "func-results-anon": {
                                "resource": "gpu-device",
                                "func": "pop-error-scope"
                            }
                        }
                    }
                },
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-device",
                        "func": "pop-error-scope",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "ok": "$_SUCCESS",
                                    "err": {
                                        "named": "pop-error-scope-error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "map-async can throw for various reasons. https://www.w3.org/TR/webgpu/#dom-gpubuffer-mapasync",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "map-async-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "operation-error"
                                    },
                                    {
                                        "name": "range-error"
                                    },
                                    {
                                        "name": "abort-error"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "map-async-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "map-async-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-buffer",
                        "func": "map-async",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "err": {
                                        "named": "map-async-error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "get-mapped-range can throw for various reasons. https://www.w3.org/TR/webgpu/#dom-gpubuffer-getmappedrange",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "get-mapped-range-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "operation-error"
                                    },
                                    {
                                        "name": "range-error"
                                    },
                                    {
                                        "name": "type-error"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "get-mapped-range-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "get-mapped-range-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "vars": {
                    "$_SUCCESS": {
                        "find-type": {
                            "func-results-anon": {
                                "resource": "gpu-buffer",
                                "func": "get-mapped-range-get-with-copy"
                            }
                        }
                    }
                },
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-buffer",
                        "func": "get-mapped-range-get-with-copy",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "ok": "$_SUCCESS",
                                    "err": {
                                        "named": "get-mapped-range-error"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-buffer",
                        "func": "get-mapped-range-set-with-copy",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "err": {
                                        "named": "get-mapped-range-error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "unmap throws if called while future returned by map-async is still pending. https://www.w3.org/TR/webgpu/#dom-gpubuffer-unmap",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "unmap-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "abort-error"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "unmap-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "unmap-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-buffer",
                        "func": "unmap",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "err": {
                                        "named": "unmap-error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "set-bind-group throws if dynamic-offsets-data-start/length don't fit in dynamic-offsets-data. https://www.w3.org/TR/webgpu/#dom-gpubindingcommandsmixin-setbindgroup-index-bindgroup-dynamicoffsetsdata-dynamicoffsetsdatastart-dynamicoffsetsdatalength",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "set-bind-group-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "range-error"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "set-bind-group-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "set-bind-group-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-compute-pass-encoder",
                        "func": "set-bind-group",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "err": {
                                        "named": "set-bind-group-error"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-render-pass-encoder",
                        "func": "set-bind-group",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "err": {
                                        "named": "set-bind-group-error"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-render-bundle-encoder",
                        "func": "set-bind-group",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "err": {
                                        "named": "set-bind-group-error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "reason": "write-buffer can throw for various reasons. https://www.w3.org/TR/webgpu/#dom-gpuqueue-writebuffer",
        "operations": [
            {
                "operation": {
                    "add-type": {
                        "name": "write-buffer-error-kind",
                        "kind": {
                            "variant": {
                                "cases": [
                                    {
                                        "name": "operation-error"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "add-type": {
                        "name": "write-buffer-error",
                        "kind": {
                            "record": {
                                "fields": [
                                    {
                                        "name": "kind",
                                        "type": {
                                            "named": "write-buffer-error-kind"
                                        }
                                    },
                                    {
                                        "name": "message",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "operation": {
                    "retype-func-results": {
                        "resource": "gpu-queue",
                        "func": "write-buffer-with-copy",
                        "new-results": {
                            "anon": {
                                "result": {
                                    "err": {
                                        "named": "write-buffer-error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    }
]
