package wasi:webgpu;

interface mini-canvas {
    use graphics-context.{graphics-context};
    use wasi:io/poll@0.2.0.{pollable};

    record create-desc {
        height: u32,
        width: u32,
        offscreen: bool,
    }

    resource mini-canvas {
        constructor(desc: create-desc);

        connect-graphics-context: func(context: borrow<graphics-context>);

        height: func() -> u32;
        width: func() -> u32;

        subscribe-resize: func() -> pollable;
        get-resize: func() -> option<resize-event>;

        subscribe-frame: func() -> pollable;
        get-frame: func() -> option<frame-event>;

        subscribe-up: func() -> pollable;
        get-up: func() -> option<pointer-event>;

        subscribe-down: func() -> pollable;
        get-down: func() -> option<pointer-event>;

        subscribe-move: func() -> pollable;
        get-move: func() -> option<pointer-event>;

        subscribe-key-up: func() -> pollable;
        get-key-up: func() -> option<key-event>;

        subscribe-key-down: func() -> pollable;
        get-key-down: func() -> option<key-event>;
    }

    record resize-event {
        height: u32,
        width: u32,
    }

    record frame-event {
        /// This field doesn't mean anything.
        // Can't have empty record. Would like to have a way around this.
        nothing: bool,
    }

    record pointer-event {
        x: f64,
        y: f64,
    }

    record key-event {
        // should `code` and `key` be enums?
        code: string,
        key: string,
        alt-key: bool,
        ctrl-key: bool,
        meta-key: bool,
        shift-key: bool,
    }
}
